"use strict";var app=angular.module("myApp",["ui.router","ui.bootstrap","ajaxModule","vmfSplitContainerMod","orionAppFactoryModule","pdtCtrlModule","angular-bootstrap-select","angular-bootstrap-select.extra","LocalStorageModule","datatables","datatables.scroller","restangular"]);app.config(["$stateProvider","$urlRouterProvider","$sceProvider",function(t,e,i){e.otherwise("/"),i.enabled(!1),t.state("productsTab",{url:"/",views:{productView:{templateUrl:Orion.globalVars.orion_path+"templates/orion/steps/ProductView.tpl.html",controller:"ProductViewCtrl"}}})}]).config(["$tooltipProvider",function(t){t.setTriggers({openTrigger:"closeTrigger"})}]);var app=angular.module("myApp",["ui.router","ui.bootstrap","ajaxModule","vmfSplitContainerMod","orionAppFactoryModule","pdtCtrlModule","angular-bootstrap-select","angular-bootstrap-select.extra","LocalStorageModule","datatables","datatables.scroller","restangular"]);app.config(["$stateProvider","$urlRouterProvider","$sceProvider",function(t,e,i){e.otherwise("/"),i.enabled(!1),t.state("productsTab",{url:"/",views:{productView:{templateUrl:Orion.globalVars.orion_path+"templates/orion/steps/ProductView.tpl.html",controller:"ProductViewCtrl"}}})}]).config(["$tooltipProvider",function(t){t.setTriggers({openTrigger:"closeTrigger"})}]);var app=angular.module("myApp",["ui.router","ui.bootstrap","ajaxModule","vmfSplitContainerMod","orionAppFactoryModule","pdtCtrlModule","angular-bootstrap-select","angular-bootstrap-select.extra","LocalStorageModule","datatables","datatables.scroller","restangular"]);app.config(["$stateProvider","$urlRouterProvider","$sceProvider",function(t,e,i){e.otherwise("/"),i.enabled(!1),t.state("productsTab",{url:"/",views:{productView:{templateUrl:Orion.globalVars.orion_path+"templates/orion/steps/ProductView.tpl.html",controller:"ProductViewCtrl"}}})}]).config(["$tooltipProvider",function(t){t.setTriggers({openTrigger:"closeTrigger"})}]);var app=angular.module("myApp",["ui.router","ui.bootstrap","ajaxModule","vmfSplitContainerMod","orionAppFactoryModule","pdtCtrlModule","angular-bootstrap-select","angular-bootstrap-select.extra","LocalStorageModule","datatables","datatables.scroller","restangular"]);app.config(["$stateProvider","$urlRouterProvider","$sceProvider",function(t,e,i){e.otherwise("/"),i.enabled(!1),t.state("productsTab",{url:"/",views:{productView:{templateUrl:Orion.globalVars.orion_path+"templates/orion/steps/ProductView.tpl.html",controller:"ProductViewCtrl"}}})}]).config(["$tooltipProvider",function(t){t.setTriggers({openTrigger:"closeTrigger"})}]);var app=angular.module("myApp",["ui.router","ui.bootstrap","ajaxModule","vmfSplitContainerMod","orionAppFactoryModule","pdtCtrlModule","angular-bootstrap-select","angular-bootstrap-select.extra","LocalStorageModule","datatables","datatables.scroller","restangular"]);app.config(["$stateProvider","$urlRouterProvider","$sceProvider",function(t,e,i){e.otherwise("/"),i.enabled(!1),t.state("productsTab",{url:"/",views:{productView:{templateUrl:Orion.globalVars.orion_path+"templates/orion/steps/ProductView.tpl.html",controller:"ProductViewCtrl"}}})}]).config(["$tooltipProvider",function(t){t.setTriggers({openTrigger:"closeTrigger"})}]),angular.module("pdtCtrlModule",[]).directive("productsTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/productsTab.html"}}).directive("servicesTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/servicesTab.html"}}).directive("ngOrionEstimatorTable",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/orionEstimatorTable.html"}}).controller("EstimatorTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",410).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.defaultTableMsgEstimator})}]).controller("orionSearchResultsTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("startHereTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("ProductViewCtrl",["$scope","$state","$http","$compile","$timeout","$modal","OrionAppFactory",function(t,e,i,r,o,n,a){function s(e){t.isOranSelected=!0,t.appliedOranObj=e}function l(e){t.oranSearchResults=t.$new(),t.oranSearchResults.oranSearchResultsErrorMessage=e.oranSearchResultsErrorMessage,t.oranSearchResults.oranSearchDetails=e.oranSearchDetails,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/oranSearchResults.tpl.html",scope:t.oranSearchResults,windowClass:"overlay-lg"})}t.globalVars={},t.globalUrls={},t.productFamilies={},angular.copy(Orion.globalVars,t.globalVars),angular.copy(Orion.globalUrls,t.globalUrls),t.isEmpty=function(t){return void 0===t||null==t||t.length<=0},a.restServices(function(e){o(function(){t.isEmpty(e.ERROR_MESSAGE)?(t.ajaxFundLoader=!1,angular.copy(e,t.productFamilies),t.showProdLine=!1,t.showProdDetail=!1):(t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(e.ERROR_MESSAGE,"warning",!0))})},function(e){o(function(){t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(t.globalVars.ajax_error_body,"warning",!0)},200)},t.globalUrls.productFolderTreeRequest,"","GET"),t.estimatorTableObject={},t.estimatorTableObject.cartDetails=[],t.selectProduct=function(e){var i=!1;angular.forEach(t.estimatorTableObject.cartDetails,function(t){t.licInvItemID==e.licInvItemID&&(i=!0)}),setTimeout(function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table>thead>tr>th").on("click",function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table").css("cssText","width: 100% !important")})},100),i||t.estimatorTableObject.cartDetails.push(e)},t.inputKeyPressHandler=function(e){13===e.which&&t.getOranSearchResult()},t.getOranSearchResult=function(e){var i={};t.showSearchResultLoader=!0,a.restServices(function(e){t.showSearchResultLoader=!1,console.log(e),t.isEmpty(e.ERROR_MESSAGE)?(i.oranSearchResultsErrorMessage=null,i.oranSearchDetails=e,e.oranDetails.length>1?l(i):1===e.oranDetails.length?s(e.oranDetails[0]):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))},function(e){t.showSearchResultLoader=!1,i.oranSearchResultsErrorMessage=e.ERROR_MESSAGE||Orion.globalVars.ERROR_MESSAGE,l(i)},t.globalUrls.oranSearchResultsUrl,"","GET")},t.showOranDetailsPopup=function(){},t.removeSelectedOran=function(){t.isOranSelected=!1,t.appliedOranObj=null},t.startHere=function(){t.startHere=t.$new(),t.startHere.startHereModalSpinner=!0,t.startHere.startHereErrorMessage=null,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/startHere.tpl.html",scope:t.startHere,windowClass:"overlay-lg"}),a.restServices(function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.isEmpty(e.ERROR_MESSAGE)?(t.startHere.startHereErrorMessage=null,t.startHere.startHereModaldata=e):t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.startHere.startHereModaldata=data,t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},t.globalUrls.startHereUrl,"","GET")},t.startHere(),t.modalClose=function(e){t.CurrModal.close()},t.close=function(e){t.CurrModal.close()}}]).controller("ServicesStep1",["$scope","$http",function(t,e){t.serviceDetails=null,t.serviceDetails}]),angular.module("orionAppFactoryModule",[]).factory("OrionAppFactory",["$http","ajaxCall","$anchorScroll","Restangular",function(t,e,i,r){var o={};return o.product_view={},o.product_view.device_type="",o.product_view.json_data="",o.getServices=function(t,i,r,o){e.call(i,o,r,t)},o.postServices=function(t,i,r,o,n){e.call(r,n,o,t,i)},o.restServices=function(t,e,i,o,n){return"GET"==n?r.one(i).get().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"POST"==n?r.one(i).post("",o,null).then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"DELETE"==n?r.one(i,o).remove().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):void 0},o}]),angular.module("vmfSplitContainerMod",[]).directive("vmfSplitContainer",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:["$scope",function(t){t.splitContainerTitle="Split Container",t.components=[],t.values=[],this.addComponent=function(e){t.components.push(e)},this.addDivider=function(e){t.divider=e}}],link:function(t,e,i){for(var r=e.children(".split-pane-component:first"),o=e.children(".split-pane-divider"),n=e.children(".split-pane-component:last"),a=0;a<t.components.length;a++)if(t.components[a].width&&t.components[a].width.match(/%$/)){e.addClass("vertical-percent");var s=100-parseFloat(t.components[a].width.match(/(\d+)%$/)[1])+"%";r.css({right:s,marginRight:t.divider.width}),o.css({right:s,width:t.divider.width}),n.css({width:s})}else if(t.components[a].width)e.addClass("fixed-left"),r.css({width:t.components[a].width}),o.css({left:t.components[a].width,width:t.divider.width}),n.css({left:t.components[a].width,marginLeft:t.divider.width});else if(t.components[a].height&&t.components[a].height.match(/%$/)){e.addClass("horizontal-percent");var l=100-parseFloat(t.components[a].height.match(/(\d+)%$/)[1])+"%";r.css({bottom:l,marginBottom:t.divider.height}),o.css({bottom:l,height:t.divider.height}),n.css({height:l})}else t.components[a].height&&(e.addClass("fixed-top"),r.css({height:t.components[a].height}),o.css({top:t.components[a].height,height:t.divider.height}),n.css({top:t.components[a].height,marginLeft:t.divider.height}));e.splitPane()},template:'<div class="vmf-split-container" ng-transclude></div>'}}).directive("vmfSplitPaneComponent",["$compile",function(t){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",maxwidth:"@",minwidth:"@"},link:function(t,e,i,r){t.panewidth&&(r.width=t.panewidth),t.paneheight&&(r.height=t.paneheight),t.maxwidth&&(r.maxwidth=t.maxwidth),t.minwidth&&(r.minwidth=t.minwidth),r.addComponent({width:t.panewidth,height:t.paneheight})},template:'<div class="split-pane-component" ng-transclude></div>'}}]).directive("vmfSplitPaneDivider",function(){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",clicks:"@",close:"@"},controller:["$scope",function(t){t.mousedownHandler=function(e,i,r,o,n,a){var s=e.type.match(/^touch/),l=s?"touchmove":"mousemove",c=s?"touchend":"mouseup",d=i,p=d.parent(),h=d.siblings(".split-pane-resize-shim");-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.show()},500):h.show(),d.addClass("dragged"),s&&d.addClass("touch");var u=d.clone();d.after(u),$(document).on(l,t.createMousemove(p,t.pageXof(e),t.pageYof(e),r,o,n,a)),$(document).one(c,function(t){$(document).unbind(l),u.remove(),d.removeClass("dragged touch"),-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.hide()},0):h.hide()})},t.createMousemove=function(e,i,r,o,n,a,s){var l,c,d,p,h,u,m=e[0],f=e.children(".split-pane-component:first")[0],g=e.children(".split-pane-divider")[0],v=e.children(".split-pane-divider")[1],b=e.children(".split-pane-component:last")[0];if($(v).remove(),e.is(".fixed-top")){var w=t.minHeight(f),E=m.offsetHeight-t.minHeight(b)-g.offsetHeight,O=g.offsetTop-r;return function(i){i.preventDefault();var r=Math.min(Math.max(w,O+t.pageYof(i)),E);t.setTop(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-bottom"))return l=t.minHeight(b),c=m.offsetHeight-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault();var r=Math.min(Math.max(l,d-t.pageYof(i)),c);t.setBottom(f,g,b,r+"px"),e.resize()};if(e.is(".horizontal-percent")){var S;return S=0===m.offsetHeight?e[0].scrollHeight:e[0].offsetHeight,l=S-S*(parseInt(n)/100),c=S-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault(),$(b).css("display","block");var r=Math.min(Math.max(l,d-t.pageYof(i)),c);100-o>r/S*100&&(t.setBottom(f,g,b,r/S*100+"%"),$(document).one("mouseup",function(){t.setHorizontalDivider(g,r/S*100+"%")}),e.resize())}}if(e.is(".fixed-left")){var T=t.minWidth(f),M=m.offsetWidth-t.minWidth(b)-g.offsetWidth,R=g.offsetLeft-i;return function(i){i.preventDefault();var r=Math.min(Math.max(T,R+t.pageXof(i)),M);t.setLeft(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-right"))return p=t.minWidth(b),h=m.offsetWidth-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i,function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);t.setRight(f,g,b,r+"px"),e.resize()};if(e.is(".vertical-percent")){var H;H=0===m.offsetWidth?e[0].scrollWidth:e[0].offsetWidth,p=H-H*(parseInt(n)/100),h=H-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i;var y=m.offsetWidth*(a/100),I=.3*y,D=(I+10)/m.offsetWidth*100;return function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);100-D>r/H*100&&(t.setRight(f,g,b,r/H*100+"%"),$(document).one("mouseup",function(){t.setVerticalDivider(g,r/H*100+"%")}),e.resize())}}},t.pageXof=function(t){return t.pageX||t.originalEvent.pageX},t.pageYof=function(t){return t.pageY||t.originalEvent.pageY},t.minHeight=function(t){return parseInt($(t).css("min-height"))||0},t.minWidth=function(t){return parseInt($(t).css("min-width"))||0},t.setTop=function(t,e,i,r){t.style.height=r,e.style.top=r,i.style.top=r},t.setBottom=function(t,e,i,r){t.style.bottom=r,e.style.bottom=r,i.style.height=r},t.setLeft=function(t,e,i,r){t.style.width=r,e.style.left=r,i.style.left=r},t.setRight=function(t,e,i,r){t.style.right=r,e.style.right=r,i.style.width=r},t.setVerticalDivider=function(t,e){t.style.right=e},t.setHorizontalDivider=function(t,e){t.style.bottom=e}}],link:function(t,e,i,r){var o;r.addDivider({width:t.panewidth,height:t.paneheight}),o=parseInt(r.minwidth)?r.minwidth:r.width,t.doubleClickResizePane=function(e){var i=e.parent().children(".split-pane-component:first"),o=e,n=e.parent().children(".split-pane-component:last"),a=100-parseInt(r.width),s=100-parseInt(r.height);a+="%",s+="%","right"===t.close?"0%"===i.prop("style").right?(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):(i.css("right","0%"),o.css("right","0%"),n.css("width","0%")):"left"===t.close?i.prop("style").right<"99%"?(i.css("right","99%"),o.css("right","99%"),n.css("width","99%")):(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):"bottom"===t.close?"0%"===i.prop("style").bottom?(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("display","block"),n.css("height",100-parseInt(r.height)+"%")):(i.css("bottom","0%"),o.css("bottom","0%"),n.css("display","none")):"top"===t.close&&(i.prop("style").bottom<"98%"?(i.css("bottom","98%"),o.css("bottom","98%"),n.css("height","98%")):(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("height",100-parseInt(r.height)+"%")))},-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?(e.on("mousedown",function(i){var n=e,a=i;t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height))}),e.on("dblclick",function(i){t.doubleClickResizePane(e)})):e.on("mousedown",function(i){t.clicks++;var n=e,a=i;1===t.clicks&&(i.preventDefault(),setTimeout(function(){1===t.clicks?t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height)):t.doubleClickResizePane(n),t.clicks=0},0))})},template:'<div class="split-pane-divider"><div class="threedots" ng-transclude></div></div>'}}),angular.module("pdtCtrlModule",[]).directive("productsTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/productsTab.html"}}).directive("servicesTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/servicesTab.html"}}).directive("ngOrionEstimatorTable",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/orionEstimatorTable.html"}}).controller("EstimatorTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",410).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.defaultTableMsgEstimator})}]).controller("orionSearchResultsTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("startHereTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("ProductViewCtrl",["$scope","$state","$http","$compile","$timeout","$modal","OrionAppFactory",function(t,e,i,r,o,n,a){function s(e){t.isOranSelected=!0,t.appliedOranObj=e}function l(e){t.oranSearchResults=t.$new(),t.oranSearchResults.oranSearchResultsErrorMessage=e.oranSearchResultsErrorMessage,t.oranSearchResults.oranSearchDetails=e.oranSearchDetails,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/oranSearchResults.tpl.html",scope:t.oranSearchResults,windowClass:"overlay-lg"})}t.globalVars={},t.globalUrls={},t.productFamilies={},angular.copy(Orion.globalVars,t.globalVars),angular.copy(Orion.globalUrls,t.globalUrls),t.isEmpty=function(t){return void 0===t||null==t||t.length<=0},a.restServices(function(e){o(function(){t.isEmpty(e.ERROR_MESSAGE)?(t.ajaxFundLoader=!1,angular.copy(e,t.productFamilies),t.showProdLine=!1,t.showProdDetail=!1):(t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(e.ERROR_MESSAGE,"warning",!0))})},function(e){o(function(){t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(t.globalVars.ajax_error_body,"warning",!0)},200)},t.globalUrls.productFolderTreeRequest,"","GET"),t.estimatorTableObject={},t.estimatorTableObject.cartDetails=[],t.selectProduct=function(e){var i=!1;angular.forEach(t.estimatorTableObject.cartDetails,function(t){t.licInvItemID==e.licInvItemID&&(i=!0)}),setTimeout(function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table>thead>tr>th").on("click",function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table").css("cssText","width: 100% !important")})},100),i||t.estimatorTableObject.cartDetails.push(e)},t.inputKeyPressHandler=function(e){13===e.which&&t.getOranSearchResult()},t.getOranSearchResult=function(e){var i={};t.showSearchResultLoader=!0,a.restServices(function(e){t.showSearchResultLoader=!1,console.log(e),t.isEmpty(e.ERROR_MESSAGE)?(i.oranSearchResultsErrorMessage=null,i.oranSearchDetails=e,e.oranDetails.length>1?l(i):1===e.oranDetails.length?s(e.oranDetails[0]):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))},function(e){t.showSearchResultLoader=!1,i.oranSearchResultsErrorMessage=e.ERROR_MESSAGE||Orion.globalVars.ERROR_MESSAGE,l(i)},t.globalUrls.oranSearchResultsUrl,"","GET")},t.showOranDetailsPopup=function(){},t.removeSelectedOran=function(){t.isOranSelected=!1,t.appliedOranObj=null},t.startHere=function(){t.startHere=t.$new(),t.startHere.startHereModalSpinner=!0,t.startHere.startHereErrorMessage=null,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/startHere.tpl.html",scope:t.startHere,windowClass:"overlay-lg"}),a.restServices(function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.isEmpty(e.ERROR_MESSAGE)?(t.startHere.startHereErrorMessage=null,t.startHere.startHereModaldata=e):t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.startHere.startHereModaldata=data,t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},t.globalUrls.startHereUrl,"","GET")},t.startHere(),t.modalClose=function(e){t.CurrModal.close()},t.close=function(e){t.CurrModal.close()}}]).controller("ServicesStep1",["$scope","$http",function(t,e){t.serviceDetails=null,t.serviceDetails}]),angular.module("vmfSplitContainerMod",[]).directive("vmfSplitContainer",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:["$scope",function(t){t.splitContainerTitle="Split Container",t.components=[],t.values=[],this.addComponent=function(e){t.components.push(e)},this.addDivider=function(e){t.divider=e}}],link:function(t,e,i){for(var r=e.children(".split-pane-component:first"),o=e.children(".split-pane-divider"),n=e.children(".split-pane-component:last"),a=0;a<t.components.length;a++)if(t.components[a].width&&t.components[a].width.match(/%$/)){e.addClass("vertical-percent");var s=100-parseFloat(t.components[a].width.match(/(\d+)%$/)[1])+"%";r.css({right:s,marginRight:t.divider.width}),o.css({right:s,width:t.divider.width}),n.css({width:s})}else if(t.components[a].width)e.addClass("fixed-left"),r.css({width:t.components[a].width}),o.css({left:t.components[a].width,width:t.divider.width}),n.css({left:t.components[a].width,marginLeft:t.divider.width});else if(t.components[a].height&&t.components[a].height.match(/%$/)){e.addClass("horizontal-percent");var l=100-parseFloat(t.components[a].height.match(/(\d+)%$/)[1])+"%";r.css({bottom:l,marginBottom:t.divider.height}),o.css({bottom:l,height:t.divider.height}),n.css({height:l})}else t.components[a].height&&(e.addClass("fixed-top"),r.css({height:t.components[a].height}),o.css({top:t.components[a].height,height:t.divider.height}),n.css({top:t.components[a].height,marginLeft:t.divider.height}));e.splitPane()},template:'<div class="vmf-split-container" ng-transclude></div>'}}).directive("vmfSplitPaneComponent",["$compile",function(t){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",maxwidth:"@",minwidth:"@"},link:function(t,e,i,r){t.panewidth&&(r.width=t.panewidth),t.paneheight&&(r.height=t.paneheight),t.maxwidth&&(r.maxwidth=t.maxwidth),t.minwidth&&(r.minwidth=t.minwidth),r.addComponent({width:t.panewidth,height:t.paneheight})},template:'<div class="split-pane-component" ng-transclude></div>'}}]).directive("vmfSplitPaneDivider",function(){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",clicks:"@",close:"@"},controller:["$scope",function(t){t.mousedownHandler=function(e,i,r,o,n,a){var s=e.type.match(/^touch/),l=s?"touchmove":"mousemove",c=s?"touchend":"mouseup",d=i,p=d.parent(),h=d.siblings(".split-pane-resize-shim");-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.show()},500):h.show(),d.addClass("dragged"),s&&d.addClass("touch");var u=d.clone();d.after(u),$(document).on(l,t.createMousemove(p,t.pageXof(e),t.pageYof(e),r,o,n,a)),$(document).one(c,function(t){$(document).unbind(l),u.remove(),d.removeClass("dragged touch"),-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.hide()},0):h.hide()})},t.createMousemove=function(e,i,r,o,n,a,s){var l,c,d,p,h,u,m=e[0],f=e.children(".split-pane-component:first")[0],g=e.children(".split-pane-divider")[0],v=e.children(".split-pane-divider")[1],b=e.children(".split-pane-component:last")[0];if($(v).remove(),e.is(".fixed-top")){var w=t.minHeight(f),E=m.offsetHeight-t.minHeight(b)-g.offsetHeight,O=g.offsetTop-r;return function(i){i.preventDefault();var r=Math.min(Math.max(w,O+t.pageYof(i)),E);t.setTop(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-bottom"))return l=t.minHeight(b),c=m.offsetHeight-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault();var r=Math.min(Math.max(l,d-t.pageYof(i)),c);t.setBottom(f,g,b,r+"px"),e.resize()};if(e.is(".horizontal-percent")){var S;return S=0===m.offsetHeight?e[0].scrollHeight:e[0].offsetHeight,l=S-S*(parseInt(n)/100),c=S-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault(),$(b).css("display","block");var r=Math.min(Math.max(l,d-t.pageYof(i)),c);100-o>r/S*100&&(t.setBottom(f,g,b,r/S*100+"%"),$(document).one("mouseup",function(){t.setHorizontalDivider(g,r/S*100+"%")}),e.resize())}}if(e.is(".fixed-left")){var T=t.minWidth(f),M=m.offsetWidth-t.minWidth(b)-g.offsetWidth,R=g.offsetLeft-i;return function(i){i.preventDefault();var r=Math.min(Math.max(T,R+t.pageXof(i)),M);t.setLeft(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-right"))return p=t.minWidth(b),h=m.offsetWidth-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i,function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);t.setRight(f,g,b,r+"px"),e.resize()};if(e.is(".vertical-percent")){var H;H=0===m.offsetWidth?e[0].scrollWidth:e[0].offsetWidth,p=H-H*(parseInt(n)/100),h=H-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i;var y=m.offsetWidth*(a/100),I=.3*y,D=(I+10)/m.offsetWidth*100;return function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);100-D>r/H*100&&(t.setRight(f,g,b,r/H*100+"%"),$(document).one("mouseup",function(){t.setVerticalDivider(g,r/H*100+"%")}),e.resize())}}},t.pageXof=function(t){return t.pageX||t.originalEvent.pageX},t.pageYof=function(t){return t.pageY||t.originalEvent.pageY},t.minHeight=function(t){return parseInt($(t).css("min-height"))||0},t.minWidth=function(t){return parseInt($(t).css("min-width"))||0},t.setTop=function(t,e,i,r){t.style.height=r,e.style.top=r,i.style.top=r},t.setBottom=function(t,e,i,r){t.style.bottom=r,e.style.bottom=r,i.style.height=r},t.setLeft=function(t,e,i,r){t.style.width=r,e.style.left=r,i.style.left=r},t.setRight=function(t,e,i,r){t.style.right=r,e.style.right=r,i.style.width=r},t.setVerticalDivider=function(t,e){t.style.right=e},t.setHorizontalDivider=function(t,e){t.style.bottom=e}}],link:function(t,e,i,r){var o;r.addDivider({width:t.panewidth,height:t.paneheight}),o=parseInt(r.minwidth)?r.minwidth:r.width,t.doubleClickResizePane=function(e){var i=e.parent().children(".split-pane-component:first"),o=e,n=e.parent().children(".split-pane-component:last"),a=100-parseInt(r.width),s=100-parseInt(r.height);a+="%",s+="%","right"===t.close?"0%"===i.prop("style").right?(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):(i.css("right","0%"),o.css("right","0%"),n.css("width","0%")):"left"===t.close?i.prop("style").right<"99%"?(i.css("right","99%"),o.css("right","99%"),n.css("width","99%")):(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):"bottom"===t.close?"0%"===i.prop("style").bottom?(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("display","block"),n.css("height",100-parseInt(r.height)+"%")):(i.css("bottom","0%"),o.css("bottom","0%"),n.css("display","none")):"top"===t.close&&(i.prop("style").bottom<"98%"?(i.css("bottom","98%"),o.css("bottom","98%"),n.css("height","98%")):(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("height",100-parseInt(r.height)+"%")))},-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?(e.on("mousedown",function(i){var n=e,a=i;t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height))}),e.on("dblclick",function(i){t.doubleClickResizePane(e)})):e.on("mousedown",function(i){t.clicks++;var n=e,a=i;1===t.clicks&&(i.preventDefault(),setTimeout(function(){1===t.clicks?t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height)):t.doubleClickResizePane(n),t.clicks=0},0))})},template:'<div class="split-pane-divider"><div class="threedots" ng-transclude></div></div>'}}),angular.module("orionAppFactoryModule",[]).factory("OrionAppFactory",["$http","ajaxCall","$anchorScroll","Restangular",function(t,e,i,r){var o={};return o.product_view={},o.product_view.device_type="",o.product_view.json_data="",o.getServices=function(t,i,r,o){e.call(i,o,r,t)},o.postServices=function(t,i,r,o,n){e.call(r,n,o,t,i)},o.restServices=function(t,e,i,o,n){return"GET"==n?r.one(i).get().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"POST"==n?r.one(i).post("",o,null).then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"DELETE"==n?r.one(i,o).remove().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):void 0},o}]),angular.module("pdtCtrlModule",[]).directive("productsTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/productsTab.html"}}).directive("servicesTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/servicesTab.html"}}).directive("ngOrionEstimatorTable",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/orionEstimatorTable.html"}}).controller("EstimatorTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",410).withOption("bAutoWidth",!1).withLanguage({
sEmptyTable:Orion.globalVars.defaultTableMsgEstimator})}]).controller("orionSearchResultsTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("startHereTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("ProductViewCtrl",["$scope","$state","$http","$compile","$timeout","$modal","OrionAppFactory",function(t,e,i,r,o,n,a){function s(e){t.isOranSelected=!0,t.appliedOranObj=e}function l(e){t.oranSearchResults=t.$new(),t.oranSearchResults.oranSearchResultsErrorMessage=e.oranSearchResultsErrorMessage,t.oranSearchResults.oranSearchDetails=e.oranSearchDetails,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/oranSearchResults.tpl.html",scope:t.oranSearchResults,windowClass:"overlay-lg"})}t.globalVars={},t.globalUrls={},t.productFamilies={},angular.copy(Orion.globalVars,t.globalVars),angular.copy(Orion.globalUrls,t.globalUrls),t.isEmpty=function(t){return void 0===t||null==t||t.length<=0},a.restServices(function(e){o(function(){t.isEmpty(e.ERROR_MESSAGE)?(t.ajaxFundLoader=!1,angular.copy(e,t.productFamilies),t.showProdLine=!1,t.showProdDetail=!1):(t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(e.ERROR_MESSAGE,"warning",!0))})},function(e){o(function(){t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(t.globalVars.ajax_error_body,"warning",!0)},200)},t.globalUrls.productFolderTreeRequest,"","GET"),t.estimatorTableObject={},t.estimatorTableObject.cartDetails=[],t.selectProduct=function(e){var i=!1;angular.forEach(t.estimatorTableObject.cartDetails,function(t){t.licInvItemID==e.licInvItemID&&(i=!0)}),setTimeout(function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table>thead>tr>th").on("click",function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table").css("cssText","width: 100% !important")})},100),i||t.estimatorTableObject.cartDetails.push(e)},t.inputKeyPressHandler=function(e){13===e.which&&t.getOranSearchResult()},t.getOranSearchResult=function(e){var i={};t.showSearchResultLoader=!0,a.restServices(function(e){t.showSearchResultLoader=!1,console.log(e),t.isEmpty(e.ERROR_MESSAGE)?(i.oranSearchResultsErrorMessage=null,i.oranSearchDetails=e,e.oranDetails.length>1?l(i):1===e.oranDetails.length?s(e.oranDetails[0]):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))},function(e){t.showSearchResultLoader=!1,i.oranSearchResultsErrorMessage=e.ERROR_MESSAGE||Orion.globalVars.ERROR_MESSAGE,l(i)},t.globalUrls.oranSearchResultsUrl,"","GET")},t.showOranDetailsPopup=function(){},t.removeSelectedOran=function(){t.isOranSelected=!1,t.appliedOranObj=null},t.startHere=function(){t.startHere=t.$new(),t.startHere.startHereModalSpinner=!0,t.startHere.startHereErrorMessage=null,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/startHere.tpl.html",scope:t.startHere,windowClass:"overlay-lg"}),a.restServices(function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.isEmpty(e.ERROR_MESSAGE)?(t.startHere.startHereErrorMessage=null,t.startHere.startHereModaldata=e):t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.startHere.startHereModaldata=data,t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},t.globalUrls.startHereUrl,"","GET")},t.startHere(),t.modalClose=function(e){t.CurrModal.close()},t.close=function(e){t.CurrModal.close()}}]).controller("ServicesStep1",["$scope","$http",function(t,e){t.serviceDetails=null,t.serviceDetails}]),angular.module("orionAppFactoryModule",[]).factory("OrionAppFactory",["$http","ajaxCall","$anchorScroll","Restangular",function(t,e,i,r){var o={};return o.product_view={},o.product_view.device_type="",o.product_view.json_data="",o.getServices=function(t,i,r,o){e.call(i,o,r,t)},o.postServices=function(t,i,r,o,n){e.call(r,n,o,t,i)},o.restServices=function(t,e,i,o,n){return"GET"==n?r.one(i).get().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"POST"==n?r.one(i).post("",o,null).then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"DELETE"==n?r.one(i,o).remove().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):void 0},o}]),angular.module("vmfSplitContainerMod",[]).directive("vmfSplitContainer",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:["$scope",function(t){t.splitContainerTitle="Split Container",t.components=[],t.values=[],this.addComponent=function(e){t.components.push(e)},this.addDivider=function(e){t.divider=e}}],link:function(t,e,i){for(var r=e.children(".split-pane-component:first"),o=e.children(".split-pane-divider"),n=e.children(".split-pane-component:last"),a=0;a<t.components.length;a++)if(t.components[a].width&&t.components[a].width.match(/%$/)){e.addClass("vertical-percent");var s=100-parseFloat(t.components[a].width.match(/(\d+)%$/)[1])+"%";r.css({right:s,marginRight:t.divider.width}),o.css({right:s,width:t.divider.width}),n.css({width:s})}else if(t.components[a].width)e.addClass("fixed-left"),r.css({width:t.components[a].width}),o.css({left:t.components[a].width,width:t.divider.width}),n.css({left:t.components[a].width,marginLeft:t.divider.width});else if(t.components[a].height&&t.components[a].height.match(/%$/)){e.addClass("horizontal-percent");var l=100-parseFloat(t.components[a].height.match(/(\d+)%$/)[1])+"%";r.css({bottom:l,marginBottom:t.divider.height}),o.css({bottom:l,height:t.divider.height}),n.css({height:l})}else t.components[a].height&&(e.addClass("fixed-top"),r.css({height:t.components[a].height}),o.css({top:t.components[a].height,height:t.divider.height}),n.css({top:t.components[a].height,marginLeft:t.divider.height}));e.splitPane()},template:'<div class="vmf-split-container" ng-transclude></div>'}}).directive("vmfSplitPaneComponent",["$compile",function(t){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",maxwidth:"@",minwidth:"@"},link:function(t,e,i,r){t.panewidth&&(r.width=t.panewidth),t.paneheight&&(r.height=t.paneheight),t.maxwidth&&(r.maxwidth=t.maxwidth),t.minwidth&&(r.minwidth=t.minwidth),r.addComponent({width:t.panewidth,height:t.paneheight})},template:'<div class="split-pane-component" ng-transclude></div>'}}]).directive("vmfSplitPaneDivider",function(){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",clicks:"@",close:"@"},controller:["$scope",function(t){t.mousedownHandler=function(e,i,r,o,n,a){var s=e.type.match(/^touch/),l=s?"touchmove":"mousemove",c=s?"touchend":"mouseup",d=i,p=d.parent(),h=d.siblings(".split-pane-resize-shim");-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.show()},500):h.show(),d.addClass("dragged"),s&&d.addClass("touch");var u=d.clone();d.after(u),$(document).on(l,t.createMousemove(p,t.pageXof(e),t.pageYof(e),r,o,n,a)),$(document).one(c,function(t){$(document).unbind(l),u.remove(),d.removeClass("dragged touch"),-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.hide()},0):h.hide()})},t.createMousemove=function(e,i,r,o,n,a,s){var l,c,d,p,h,u,m=e[0],f=e.children(".split-pane-component:first")[0],g=e.children(".split-pane-divider")[0],v=e.children(".split-pane-divider")[1],b=e.children(".split-pane-component:last")[0];if($(v).remove(),e.is(".fixed-top")){var w=t.minHeight(f),E=m.offsetHeight-t.minHeight(b)-g.offsetHeight,O=g.offsetTop-r;return function(i){i.preventDefault();var r=Math.min(Math.max(w,O+t.pageYof(i)),E);t.setTop(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-bottom"))return l=t.minHeight(b),c=m.offsetHeight-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault();var r=Math.min(Math.max(l,d-t.pageYof(i)),c);t.setBottom(f,g,b,r+"px"),e.resize()};if(e.is(".horizontal-percent")){var S;return S=0===m.offsetHeight?e[0].scrollHeight:e[0].offsetHeight,l=S-S*(parseInt(n)/100),c=S-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault(),$(b).css("display","block");var r=Math.min(Math.max(l,d-t.pageYof(i)),c);100-o>r/S*100&&(t.setBottom(f,g,b,r/S*100+"%"),$(document).one("mouseup",function(){t.setHorizontalDivider(g,r/S*100+"%")}),e.resize())}}if(e.is(".fixed-left")){var T=t.minWidth(f),M=m.offsetWidth-t.minWidth(b)-g.offsetWidth,R=g.offsetLeft-i;return function(i){i.preventDefault();var r=Math.min(Math.max(T,R+t.pageXof(i)),M);t.setLeft(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-right"))return p=t.minWidth(b),h=m.offsetWidth-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i,function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);t.setRight(f,g,b,r+"px"),e.resize()};if(e.is(".vertical-percent")){var H;H=0===m.offsetWidth?e[0].scrollWidth:e[0].offsetWidth,p=H-H*(parseInt(n)/100),h=H-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i;var y=m.offsetWidth*(a/100),I=.3*y,D=(I+10)/m.offsetWidth*100;return function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);100-D>r/H*100&&(t.setRight(f,g,b,r/H*100+"%"),$(document).one("mouseup",function(){t.setVerticalDivider(g,r/H*100+"%")}),e.resize())}}},t.pageXof=function(t){return t.pageX||t.originalEvent.pageX},t.pageYof=function(t){return t.pageY||t.originalEvent.pageY},t.minHeight=function(t){return parseInt($(t).css("min-height"))||0},t.minWidth=function(t){return parseInt($(t).css("min-width"))||0},t.setTop=function(t,e,i,r){t.style.height=r,e.style.top=r,i.style.top=r},t.setBottom=function(t,e,i,r){t.style.bottom=r,e.style.bottom=r,i.style.height=r},t.setLeft=function(t,e,i,r){t.style.width=r,e.style.left=r,i.style.left=r},t.setRight=function(t,e,i,r){t.style.right=r,e.style.right=r,i.style.width=r},t.setVerticalDivider=function(t,e){t.style.right=e},t.setHorizontalDivider=function(t,e){t.style.bottom=e}}],link:function(t,e,i,r){var o;r.addDivider({width:t.panewidth,height:t.paneheight}),o=parseInt(r.minwidth)?r.minwidth:r.width,t.doubleClickResizePane=function(e){var i=e.parent().children(".split-pane-component:first"),o=e,n=e.parent().children(".split-pane-component:last"),a=100-parseInt(r.width),s=100-parseInt(r.height);a+="%",s+="%","right"===t.close?"0%"===i.prop("style").right?(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):(i.css("right","0%"),o.css("right","0%"),n.css("width","0%")):"left"===t.close?i.prop("style").right<"99%"?(i.css("right","99%"),o.css("right","99%"),n.css("width","99%")):(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):"bottom"===t.close?"0%"===i.prop("style").bottom?(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("display","block"),n.css("height",100-parseInt(r.height)+"%")):(i.css("bottom","0%"),o.css("bottom","0%"),n.css("display","none")):"top"===t.close&&(i.prop("style").bottom<"98%"?(i.css("bottom","98%"),o.css("bottom","98%"),n.css("height","98%")):(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("height",100-parseInt(r.height)+"%")))},-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?(e.on("mousedown",function(i){var n=e,a=i;t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height))}),e.on("dblclick",function(i){t.doubleClickResizePane(e)})):e.on("mousedown",function(i){t.clicks++;var n=e,a=i;1===t.clicks&&(i.preventDefault(),setTimeout(function(){1===t.clicks?t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height)):t.doubleClickResizePane(n),t.clicks=0},0))})},template:'<div class="split-pane-divider"><div class="threedots" ng-transclude></div></div>'}}),angular.module("pdtCtrlModule",[]).directive("productsTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/productsTab.html"}}).directive("servicesTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/servicesTab.html"}}).directive("ngOrionEstimatorTable",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/orionEstimatorTable.html"}}).controller("EstimatorTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",410).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.defaultTableMsgEstimator})}]).controller("orionSearchResultsTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("startHereTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("ProductViewCtrl",["$scope","$state","$http","$compile","$timeout","$modal","OrionAppFactory",function(t,e,i,r,o,n,a){function s(e){t.isOranSelected=!0,t.appliedOranObj=e}function l(e){t.oranSearchResults=t.$new(),t.oranSearchResults.oranSearchResultsErrorMessage=e.oranSearchResultsErrorMessage,t.oranSearchResults.oranSearchDetails=e.oranSearchDetails,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/oranSearchResults.tpl.html",scope:t.oranSearchResults,windowClass:"overlay-lg"})}t.globalVars={},t.globalUrls={},t.productFamilies={},angular.copy(Orion.globalVars,t.globalVars),angular.copy(Orion.globalUrls,t.globalUrls),t.isEmpty=function(t){return void 0===t||null==t||t.length<=0},a.restServices(function(e){o(function(){t.isEmpty(e.ERROR_MESSAGE)?(t.ajaxFundLoader=!1,angular.copy(e,t.productFamilies),t.showProdLine=!1,t.showProdDetail=!1):(t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(e.ERROR_MESSAGE,"warning",!0))})},function(e){o(function(){t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(t.globalVars.ajax_error_body,"warning",!0)},200)},t.globalUrls.productFolderTreeRequest,"","GET"),t.estimatorTableObject={},t.estimatorTableObject.cartDetails=[],t.selectProduct=function(e){var i=!1;angular.forEach(t.estimatorTableObject.cartDetails,function(t){t.licInvItemID==e.licInvItemID&&(i=!0)}),setTimeout(function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table>thead>tr>th").on("click",function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table").css("cssText","width: 100% !important")})},100),i||t.estimatorTableObject.cartDetails.push(e)},t.inputKeyPressHandler=function(e){13===e.which&&t.getOranSearchResult()},t.getOranSearchResult=function(e){var i={};t.showSearchResultLoader=!0,a.restServices(function(e){t.showSearchResultLoader=!1,console.log(e),t.isEmpty(e.ERROR_MESSAGE)?(i.oranSearchResultsErrorMessage=null,i.oranSearchDetails=e,e.oranDetails.length>1?l(i):1===e.oranDetails.length?s(e.oranDetails[0]):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))},function(e){t.showSearchResultLoader=!1,i.oranSearchResultsErrorMessage=e.ERROR_MESSAGE||Orion.globalVars.ERROR_MESSAGE,l(i)},t.globalUrls.oranSearchResultsUrl,"","GET")},t.showOranDetailsPopup=function(){},t.removeSelectedOran=function(){t.isOranSelected=!1,t.appliedOranObj=null},t.startHere=function(){t.startHere=t.$new(),t.startHere.startHereModalSpinner=!0,t.startHere.startHereErrorMessage=null,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/startHere.tpl.html",scope:t.startHere,windowClass:"overlay-lg"}),a.restServices(function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.isEmpty(e.ERROR_MESSAGE)?(t.startHere.startHereErrorMessage=null,t.startHere.startHereModaldata=e):t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.startHere.startHereModaldata=data,t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},t.globalUrls.startHereUrl,"","GET")},t.startHere(),t.modalClose=function(e){t.CurrModal.close()},t.close=function(e){t.CurrModal.close()}}]).controller("ServicesStep1",["$scope","$http",function(t,e){t.serviceDetails=null,t.serviceDetails}]),angular.module("vmfSplitContainerMod",[]).directive("vmfSplitContainer",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:["$scope",function(t){t.splitContainerTitle="Split Container",t.components=[],t.values=[],this.addComponent=function(e){t.components.push(e)},this.addDivider=function(e){t.divider=e}}],link:function(t,e,i){for(var r=e.children(".split-pane-component:first"),o=e.children(".split-pane-divider"),n=e.children(".split-pane-component:last"),a=0;a<t.components.length;a++)if(t.components[a].width&&t.components[a].width.match(/%$/)){e.addClass("vertical-percent");var s=100-parseFloat(t.components[a].width.match(/(\d+)%$/)[1])+"%";r.css({right:s,marginRight:t.divider.width}),o.css({right:s,width:t.divider.width}),n.css({width:s})}else if(t.components[a].width)e.addClass("fixed-left"),r.css({width:t.components[a].width}),o.css({left:t.components[a].width,width:t.divider.width}),n.css({left:t.components[a].width,marginLeft:t.divider.width});else if(t.components[a].height&&t.components[a].height.match(/%$/)){e.addClass("horizontal-percent");var l=100-parseFloat(t.components[a].height.match(/(\d+)%$/)[1])+"%";r.css({bottom:l,marginBottom:t.divider.height}),o.css({bottom:l,height:t.divider.height}),n.css({height:l})}else t.components[a].height&&(e.addClass("fixed-top"),r.css({height:t.components[a].height}),o.css({top:t.components[a].height,height:t.divider.height}),n.css({top:t.components[a].height,marginLeft:t.divider.height}));e.splitPane()},template:'<div class="vmf-split-container" ng-transclude></div>'}}).directive("vmfSplitPaneComponent",["$compile",function(t){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",maxwidth:"@",minwidth:"@"},link:function(t,e,i,r){t.panewidth&&(r.width=t.panewidth),t.paneheight&&(r.height=t.paneheight),t.maxwidth&&(r.maxwidth=t.maxwidth),t.minwidth&&(r.minwidth=t.minwidth),r.addComponent({width:t.panewidth,height:t.paneheight})},template:'<div class="split-pane-component" ng-transclude></div>'}}]).directive("vmfSplitPaneDivider",function(){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",clicks:"@",close:"@"},controller:["$scope",function(t){t.mousedownHandler=function(e,i,r,o,n,a){var s=e.type.match(/^touch/),l=s?"touchmove":"mousemove",c=s?"touchend":"mouseup",d=i,p=d.parent(),h=d.siblings(".split-pane-resize-shim");-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.show()},500):h.show(),d.addClass("dragged"),s&&d.addClass("touch");var u=d.clone();d.after(u),$(document).on(l,t.createMousemove(p,t.pageXof(e),t.pageYof(e),r,o,n,a)),$(document).one(c,function(t){$(document).unbind(l),u.remove(),d.removeClass("dragged touch"),-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.hide()},0):h.hide()})},t.createMousemove=function(e,i,r,o,n,a,s){var l,c,d,p,h,u,m=e[0],f=e.children(".split-pane-component:first")[0],g=e.children(".split-pane-divider")[0],v=e.children(".split-pane-divider")[1],b=e.children(".split-pane-component:last")[0];if($(v).remove(),e.is(".fixed-top")){var w=t.minHeight(f),E=m.offsetHeight-t.minHeight(b)-g.offsetHeight,O=g.offsetTop-r;return function(i){i.preventDefault();var r=Math.min(Math.max(w,O+t.pageYof(i)),E);t.setTop(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-bottom"))return l=t.minHeight(b),c=m.offsetHeight-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault();var r=Math.min(Math.max(l,d-t.pageYof(i)),c);t.setBottom(f,g,b,r+"px"),e.resize()};if(e.is(".horizontal-percent")){var S;return S=0===m.offsetHeight?e[0].scrollHeight:e[0].offsetHeight,l=S-S*(parseInt(n)/100),c=S-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault(),$(b).css("display","block");var r=Math.min(Math.max(l,d-t.pageYof(i)),c);100-o>r/S*100&&(t.setBottom(f,g,b,r/S*100+"%"),$(document).one("mouseup",function(){t.setHorizontalDivider(g,r/S*100+"%")}),e.resize())}}if(e.is(".fixed-left")){var T=t.minWidth(f),M=m.offsetWidth-t.minWidth(b)-g.offsetWidth,R=g.offsetLeft-i;return function(i){i.preventDefault();var r=Math.min(Math.max(T,R+t.pageXof(i)),M);t.setLeft(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-right"))return p=t.minWidth(b),h=m.offsetWidth-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i,function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);t.setRight(f,g,b,r+"px"),e.resize()};if(e.is(".vertical-percent")){var H;H=0===m.offsetWidth?e[0].scrollWidth:e[0].offsetWidth,p=H-H*(parseInt(n)/100),h=H-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i;var y=m.offsetWidth*(a/100),I=.3*y,D=(I+10)/m.offsetWidth*100;return function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);100-D>r/H*100&&(t.setRight(f,g,b,r/H*100+"%"),$(document).one("mouseup",function(){t.setVerticalDivider(g,r/H*100+"%")}),e.resize())}}},t.pageXof=function(t){return t.pageX||t.originalEvent.pageX},t.pageYof=function(t){return t.pageY||t.originalEvent.pageY},t.minHeight=function(t){return parseInt($(t).css("min-height"))||0},t.minWidth=function(t){return parseInt($(t).css("min-width"))||0},t.setTop=function(t,e,i,r){t.style.height=r,e.style.top=r,i.style.top=r},t.setBottom=function(t,e,i,r){t.style.bottom=r,e.style.bottom=r,i.style.height=r},t.setLeft=function(t,e,i,r){t.style.width=r,e.style.left=r,i.style.left=r},t.setRight=function(t,e,i,r){t.style.right=r,e.style.right=r,i.style.width=r},t.setVerticalDivider=function(t,e){t.style.right=e},t.setHorizontalDivider=function(t,e){t.style.bottom=e}}],link:function(t,e,i,r){var o;r.addDivider({width:t.panewidth,height:t.paneheight}),o=parseInt(r.minwidth)?r.minwidth:r.width,t.doubleClickResizePane=function(e){var i=e.parent().children(".split-pane-component:first"),o=e,n=e.parent().children(".split-pane-component:last"),a=100-parseInt(r.width),s=100-parseInt(r.height);a+="%",s+="%","right"===t.close?"0%"===i.prop("style").right?(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):(i.css("right","0%"),o.css("right","0%"),n.css("width","0%")):"left"===t.close?i.prop("style").right<"99%"?(i.css("right","99%"),o.css("right","99%"),n.css("width","99%")):(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):"bottom"===t.close?"0%"===i.prop("style").bottom?(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("display","block"),n.css("height",100-parseInt(r.height)+"%")):(i.css("bottom","0%"),o.css("bottom","0%"),n.css("display","none")):"top"===t.close&&(i.prop("style").bottom<"98%"?(i.css("bottom","98%"),o.css("bottom","98%"),n.css("height","98%")):(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("height",100-parseInt(r.height)+"%")))},-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?(e.on("mousedown",function(i){var n=e,a=i;t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height))}),e.on("dblclick",function(i){t.doubleClickResizePane(e)})):e.on("mousedown",function(i){t.clicks++;var n=e,a=i;1===t.clicks&&(i.preventDefault(),setTimeout(function(){1===t.clicks?t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height)):t.doubleClickResizePane(n),t.clicks=0},0))})},template:'<div class="split-pane-divider"><div class="threedots" ng-transclude></div></div>'}}),angular.module("orionAppFactoryModule",[]).factory("OrionAppFactory",["$http","ajaxCall","$anchorScroll","Restangular",function(t,e,i,r){var o={};return o.product_view={},o.product_view.device_type="",o.product_view.json_data="",o.getServices=function(t,i,r,o){e.call(i,o,r,t)},o.postServices=function(t,i,r,o,n){e.call(r,n,o,t,i)},o.restServices=function(t,e,i,o,n){return"GET"==n?r.one(i).get().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"POST"==n?r.one(i).post("",o,null).then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"DELETE"==n?r.one(i,o).remove().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):void 0},o}]),angular.module("pdtCtrlModule",[]).directive("productsTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/productsTab.html"}}).directive("servicesTab",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/servicesTab.html"}}).directive("ngOrionEstimatorTable",function(){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:Orion.globalVars.orion_path+"templates/orion/directives/orionEstimatorTable.html"}}).controller("EstimatorTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",410).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.defaultTableMsgEstimator})}]).controller("orionSearchResultsTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("startHereTableController",["DTOptionsBuilder","DTColumnDefBuilder",function(t,e){var i=this;i.dtOptions=t.newOptions().withOption("bPaginate",!1).withOption("bInfo",!1).withOption("scrollY",250).withOption("bAutoWidth",!1).withLanguage({sEmptyTable:Orion.globalVars.noDataAvaiable})}]).controller("ProductViewCtrl",["$scope","$state","$http","$compile","$timeout","$modal","OrionAppFactory",function(t,e,i,r,o,n,a){function s(e){t.isOranSelected=!0,t.appliedOranObj=e}function l(e){t.oranSearchResults=t.$new(),t.oranSearchResults.oranSearchResultsErrorMessage=e.oranSearchResultsErrorMessage,t.oranSearchResults.oranSearchDetails=e.oranSearchDetails,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/oranSearchResults.tpl.html",scope:t.oranSearchResults,windowClass:"overlay-lg"})}t.globalVars={},t.globalUrls={},t.productFamilies={},angular.copy(Orion.globalVars,t.globalVars),angular.copy(Orion.globalUrls,t.globalUrls),t.isEmpty=function(t){return void 0===t||null==t||t.length<=0},a.restServices(function(e){o(function(){t.isEmpty(e.ERROR_MESSAGE)?(t.ajaxFundLoader=!1,angular.copy(e,t.productFamilies),t.showProdLine=!1,t.showProdDetail=!1):(t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(e.ERROR_MESSAGE,"warning",!0))})},function(e){o(function(){t.ajaxFundLoader=!1,vmf.msg.page(""),t.displayErrorAlert(t.globalVars.ajax_error_body,"warning",!0)},200)},t.globalUrls.productFolderTreeRequest,"","GET"),t.estimatorTableObject={},t.estimatorTableObject.cartDetails=[],t.selectProduct=function(e){var i=!1;angular.forEach(t.estimatorTableObject.cartDetails,function(t){t.licInvItemID==e.licInvItemID&&(i=!0)}),setTimeout(function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table>thead>tr>th").on("click",function(){$("#orionEstimatorTable div.dataTables_scrollBody table").height()>"410"?$("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 99% !important"):($("#orionEstimatorTable div.dataTables_scrollHeadInner").css("cssText","width: 100% !important"),$("#orionEstimatorTable div.dataTables_scrollHeadInner").addClass("dataTableBefore")),$("#orionEstimatorTable div.dataTables_scrollHeadInner table").css("cssText","width: 100% !important")})},100),i||t.estimatorTableObject.cartDetails.push(e)},t.inputKeyPressHandler=function(e){13===e.which&&t.getOranSearchResult()},t.getOranSearchResult=function(e){var i={};t.showSearchResultLoader=!0,a.restServices(function(e){t.showSearchResultLoader=!1,console.log(e),t.isEmpty(e.ERROR_MESSAGE)?(i.oranSearchResultsErrorMessage=null,i.oranSearchDetails=e,e.oranDetails.length>1?l(i):1===e.oranDetails.length?s(e.oranDetails[0]):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))):(i.oranSearchResultsErrorMessage=Orion.globalVars.ERROR_MESSAGE,l(i))},function(e){t.showSearchResultLoader=!1,i.oranSearchResultsErrorMessage=e.ERROR_MESSAGE||Orion.globalVars.ERROR_MESSAGE,l(i)},t.globalUrls.oranSearchResultsUrl,"","GET")},t.showOranDetailsPopup=function(){},t.removeSelectedOran=function(){t.isOranSelected=!1,t.appliedOranObj=null},t.startHere=function(){t.startHere=t.$new(),t.startHere.startHereModalSpinner=!0,t.startHere.startHereErrorMessage=null,t.CurrModal=n.open({templateUrl:"/static/myvmware/modules/estimator/templates/orion/directives/startHere.tpl.html",
scope:t.startHere,windowClass:"overlay-lg"}),a.restServices(function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.isEmpty(e.ERROR_MESSAGE)?(t.startHere.startHereErrorMessage=null,t.startHere.startHereModaldata=e):t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},function(e){o(function(){t.startHere.startHereModalSpinner=!1,t.startHere.startHereModaldata=data,t.startHere.startHereErrorMessage=Orion.globalVars.ERROR_MESSAGE},200)},t.globalUrls.startHereUrl,"","GET")},t.startHere(),t.modalClose=function(e){t.CurrModal.close()},t.close=function(e){t.CurrModal.close()}}]).controller("ServicesStep1",["$scope","$http",function(t,e){t.serviceDetails=null,t.serviceDetails}]),angular.module("orionAppFactoryModule",[]).factory("OrionAppFactory",["$http","ajaxCall","$anchorScroll","Restangular",function(t,e,i,r){var o={};return o.product_view={},o.product_view.device_type="",o.product_view.json_data="",o.getServices=function(t,i,r,o){e.call(i,o,r,t)},o.postServices=function(t,i,r,o,n){e.call(r,n,o,t,i)},o.restServices=function(t,e,i,o,n){return"GET"==n?r.one(i).get().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"POST"==n?r.one(i).post("",o,null).then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):"DELETE"==n?r.one(i,o).remove().then(function(i){angular.isObject(i)&&!$.isEmptyObject(i.plain())?t(i.plain()):e(i)},function(t){e(t)}):void 0},o}]),angular.module("vmfSplitContainerMod",[]).directive("vmfSplitContainer",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:["$scope",function(t){t.splitContainerTitle="Split Container",t.components=[],t.values=[],this.addComponent=function(e){t.components.push(e)},this.addDivider=function(e){t.divider=e}}],link:function(t,e,i){for(var r=e.children(".split-pane-component:first"),o=e.children(".split-pane-divider"),n=e.children(".split-pane-component:last"),a=0;a<t.components.length;a++)if(t.components[a].width&&t.components[a].width.match(/%$/)){e.addClass("vertical-percent");var s=100-parseFloat(t.components[a].width.match(/(\d+)%$/)[1])+"%";r.css({right:s,marginRight:t.divider.width}),o.css({right:s,width:t.divider.width}),n.css({width:s})}else if(t.components[a].width)e.addClass("fixed-left"),r.css({width:t.components[a].width}),o.css({left:t.components[a].width,width:t.divider.width}),n.css({left:t.components[a].width,marginLeft:t.divider.width});else if(t.components[a].height&&t.components[a].height.match(/%$/)){e.addClass("horizontal-percent");var l=100-parseFloat(t.components[a].height.match(/(\d+)%$/)[1])+"%";r.css({bottom:l,marginBottom:t.divider.height}),o.css({bottom:l,height:t.divider.height}),n.css({height:l})}else t.components[a].height&&(e.addClass("fixed-top"),r.css({height:t.components[a].height}),o.css({top:t.components[a].height,height:t.divider.height}),n.css({top:t.components[a].height,marginLeft:t.divider.height}));e.splitPane()},template:'<div class="vmf-split-container" ng-transclude></div>'}}).directive("vmfSplitPaneComponent",["$compile",function(t){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",maxwidth:"@",minwidth:"@"},link:function(t,e,i,r){t.panewidth&&(r.width=t.panewidth),t.paneheight&&(r.height=t.paneheight),t.maxwidth&&(r.maxwidth=t.maxwidth),t.minwidth&&(r.minwidth=t.minwidth),r.addComponent({width:t.panewidth,height:t.paneheight})},template:'<div class="split-pane-component" ng-transclude></div>'}}]).directive("vmfSplitPaneDivider",function(){return{restrict:"EA",replace:!0,transclude:!0,require:"^vmfSplitContainer",scope:{panewidth:"@",paneheight:"@",clicks:"@",close:"@"},controller:["$scope",function(t){t.mousedownHandler=function(e,i,r,o,n,a){var s=e.type.match(/^touch/),l=s?"touchmove":"mousemove",c=s?"touchend":"mouseup",d=i,p=d.parent(),h=d.siblings(".split-pane-resize-shim");-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.show()},500):h.show(),d.addClass("dragged"),s&&d.addClass("touch");var u=d.clone();d.after(u),$(document).on(l,t.createMousemove(p,t.pageXof(e),t.pageYof(e),r,o,n,a)),$(document).one(c,function(t){$(document).unbind(l),u.remove(),d.removeClass("dragged touch"),-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?setTimeout(function(){h.hide()},0):h.hide()})},t.createMousemove=function(e,i,r,o,n,a,s){var l,c,d,p,h,u,m=e[0],f=e.children(".split-pane-component:first")[0],g=e.children(".split-pane-divider")[0],v=e.children(".split-pane-divider")[1],b=e.children(".split-pane-component:last")[0];if($(v).remove(),e.is(".fixed-top")){var w=t.minHeight(f),E=m.offsetHeight-t.minHeight(b)-g.offsetHeight,O=g.offsetTop-r;return function(i){i.preventDefault();var r=Math.min(Math.max(w,O+t.pageYof(i)),E);t.setTop(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-bottom"))return l=t.minHeight(b),c=m.offsetHeight-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault();var r=Math.min(Math.max(l,d-t.pageYof(i)),c);t.setBottom(f,g,b,r+"px"),e.resize()};if(e.is(".horizontal-percent")){var S;return S=0===m.offsetHeight?e[0].scrollHeight:e[0].offsetHeight,l=S-S*(parseInt(n)/100),c=S-t.minHeight(f)-g.offsetHeight,d=b.offsetHeight+r,function(i){i.preventDefault(),$(b).css("display","block");var r=Math.min(Math.max(l,d-t.pageYof(i)),c);100-o>r/S*100&&(t.setBottom(f,g,b,r/S*100+"%"),$(document).one("mouseup",function(){t.setHorizontalDivider(g,r/S*100+"%")}),e.resize())}}if(e.is(".fixed-left")){var T=t.minWidth(f),M=m.offsetWidth-t.minWidth(b)-g.offsetWidth,R=g.offsetLeft-i;return function(i){i.preventDefault();var r=Math.min(Math.max(T,R+t.pageXof(i)),M);t.setLeft(f,g,b,r+"px"),e.resize()}}if(e.is(".fixed-right"))return p=t.minWidth(b),h=m.offsetWidth-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i,function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);t.setRight(f,g,b,r+"px"),e.resize()};if(e.is(".vertical-percent")){var H;H=0===m.offsetWidth?e[0].scrollWidth:e[0].offsetWidth,p=H-H*(parseInt(n)/100),h=H-t.minWidth(f)-g.offsetWidth,u=b.offsetWidth+i;var y=m.offsetWidth*(a/100),I=.3*y,D=(I+10)/m.offsetWidth*100;return function(i){i.preventDefault();var r=Math.min(Math.max(p,u-t.pageXof(i)),h);100-D>r/H*100&&(t.setRight(f,g,b,r/H*100+"%"),$(document).one("mouseup",function(){t.setVerticalDivider(g,r/H*100+"%")}),e.resize())}}},t.pageXof=function(t){return t.pageX||t.originalEvent.pageX},t.pageYof=function(t){return t.pageY||t.originalEvent.pageY},t.minHeight=function(t){return parseInt($(t).css("min-height"))||0},t.minWidth=function(t){return parseInt($(t).css("min-width"))||0},t.setTop=function(t,e,i,r){t.style.height=r,e.style.top=r,i.style.top=r},t.setBottom=function(t,e,i,r){t.style.bottom=r,e.style.bottom=r,i.style.height=r},t.setLeft=function(t,e,i,r){t.style.width=r,e.style.left=r,i.style.left=r},t.setRight=function(t,e,i,r){t.style.right=r,e.style.right=r,i.style.width=r},t.setVerticalDivider=function(t,e){t.style.right=e},t.setHorizontalDivider=function(t,e){t.style.bottom=e}}],link:function(t,e,i,r){var o;r.addDivider({width:t.panewidth,height:t.paneheight}),o=parseInt(r.minwidth)?r.minwidth:r.width,t.doubleClickResizePane=function(e){var i=e.parent().children(".split-pane-component:first"),o=e,n=e.parent().children(".split-pane-component:last"),a=100-parseInt(r.width),s=100-parseInt(r.height);a+="%",s+="%","right"===t.close?"0%"===i.prop("style").right?(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):(i.css("right","0%"),o.css("right","0%"),n.css("width","0%")):"left"===t.close?i.prop("style").right<"99%"?(i.css("right","99%"),o.css("right","99%"),n.css("width","99%")):(i.css("right",100-parseInt(r.width)+"%"),o.css("right",100-parseInt(r.width)+"%"),n.css("width",100-parseInt(r.width)+"%")):"bottom"===t.close?"0%"===i.prop("style").bottom?(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("display","block"),n.css("height",100-parseInt(r.height)+"%")):(i.css("bottom","0%"),o.css("bottom","0%"),n.css("display","none")):"top"===t.close&&(i.prop("style").bottom<"98%"?(i.css("bottom","98%"),o.css("bottom","98%"),n.css("height","98%")):(i.css("bottom",100-parseInt(r.height)+"%"),o.css("bottom",100-parseInt(r.height)+"%"),n.css("height",100-parseInt(r.height)+"%")))},-1!==navigator.appVersion.indexOf("MSIE 7.")||-1!==navigator.appVersion.indexOf("MSIE 8.")?(e.on("mousedown",function(i){var n=e,a=i;t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height))}),e.on("dblclick",function(i){t.doubleClickResizePane(e)})):e.on("mousedown",function(i){t.clicks++;var n=e,a=i;1===t.clicks&&(i.preventDefault(),setTimeout(function(){1===t.clicks?t.mousedownHandler(a,n,parseInt(o),parseInt(r.maxwidth),parseInt(r.width),parseInt(r.height)):t.doubleClickResizePane(n),t.clicks=0},0))})},template:'<div class="split-pane-divider"><div class="threedots" ng-transclude></div></div>'}});
//# sourceMappingURL=data:application/json;base64,
